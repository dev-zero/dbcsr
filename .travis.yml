language: c

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin

install:
  # Update cmake to the minimal required version (shamelessly copied from the boost travis config):
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version

before_script:
  # make sure we are back into the top directory again
  - cd "${TRAVIS_BUILD_DIR}"
  - export PATH=$HOME/.local/bin:$PATH
  - pip install --user git-archive-all

jobs:
  include:
  - stage: build
    name: "Build and test MPI+OpenMP version with make"
    script:
    - make -j FC="mpif90" LD="mpif90" OPTFLAGS="-fprofile-arcs -ftest-coverage -O0 -D__MPI_VERSION=2" all
    - make test
    - bash <(curl -s https://codecov.io/bash)
  - # run this in parallel with the other builds
    name: "Build and test MPI+OpenMP version with cmake"
    script:
    - mkdir -p build
    - cd build
    # C++ example fails with this ancient version of MPI,
    # we see all system CPUs, but can use only 1, causing nproc auto-detection to fail
    - cmake -DCMAKE_BUILD_TYPE=Coverage -DWITH_EXAMPLES=OFF -DTEST_MPI_RANKS=1 ..
    - make -j
    - make CTEST_OUTPUT_ON_FAILURE=1 test
  - # run this in parallel with the other builds
    name: "Build and test OpenMP version with cmake"
    script:
    - mkdir -p build
    - cd build
    # all examples need MPI atm
    - cmake -DCMAKE_BUILD_TYPE=Coverage -DUSE_MPI=OFF -DWITH_EXAMPLES=OFF ..
    - make -j
    - make CTEST_OUTPUT_ON_FAILURE=1 test
  - # run this in parallel with the other builds
    name: "Build and test MPI version with cmake"
    script:
    - mkdir -p build
    - cd build
    # all examples need MPI atm
    - cmake -DCMAKE_BUILD_TYPE=Coverage -DUSE_OPENMP=OFF -DWITH_EXAMPLES=OFF -DTEST_MPI_RANKS=1 ..
    - make -j
    - make CTEST_OUTPUT_ON_FAILURE=1 test
  - stage: GitHub Release
    if: tag IS present
    script:
      # do an in-source config for simplicity since we are not building anything here
      - cmake .
      - make dist
    deploy:
      provider: releases
      api_key:
        secure: LTp0mwInk0Y511y/h4H0a+ZJ8OMmX8FzgwkaKGtIsJSmiGI7fQnaWh0btR2QSFP/r0TZZmyJHip80noZzeT7kNY79zxNR1MXAua8MV7BglZslimIBNEnf1eKIeKykTNzwtpcaJ9ulhNYwJFpC2sWOJPaa4NYifDQWdebAJCiMaDvZpssW7fOKx+EmdADGwcGKOXailrsKg6GO8RuhtypFYED+TIn3xLKxmqO/a3bnLzAuZDq7ZCK+B7C6Z4Wjvb0m9S0FjRj8Osgp0h5viEVXXsgsbH8hi8n1NZcTBCZ+XUuGQVRfiGRgZnHNwpZlLvp0WKntXLyBQbdf4OERO9JlQZYusFastTd9NeX2EaaaSnI2OW6qtYOhzfmiLUtvDTtrzYZoEg/K38qEr4Kx0wdHFF1DMCt8X2nI122TTxktEEULZNTPhPL+UG6SIwh7b+p5DVseQDMlaW8zZvF+5pzan5LJdmnd3Tgkq4R5zU1XHwB5S/1++k/1F8mTOjpa1v25VYCkcOvEfaqhhebPhti9Z8pUnyPdL4QAnc9ZlE8o2pSWVaYFk3/UV6z2QatlJ3QTdBifOdpN3W2hGNT9DndlKuYhHB38b1k1z8Qtn3N4yDrvIFOX3a95TP/s+ZEjt9GZQdCSjhiKsuIm58W1iZYGwVO54g/4jbkrguM5ew+xH0=
      skip_cleanup: true
      file_glob: true
      file: dist/*
      draft: true
      # the following 2 lines work around an issue in TravisCI with draft=true:
      tag_name: $TRAVIS_TAG
      target_commitish: $TRAVIS_COMMIT
      on:
        tags: true
